#!/usr/bin/env bash
# configures a brand new Ubuntu machine to the requirements;
# configure web-02 to be identical to web-01
# add a custom Nginx response header to track which web
# server is answering our HTTP requests, to understand and
# track the way a load balancer works.
# Configure Nginx so that its HTTP response contains a
# custom header (on web-01 and web-02
# The name of the custom HTTP header must be X-Served-By
# The value of the custom HTTP header must be the hostname
# of the server Nginx is running on

echo -e "Configuring a bran new Ubuntu Machine....\n"

function install() {
        command -v "$1" &> /dev/null

        # disabling shellcheck=SC2181
        if [ $? -ne 0 ]; then
                echo -e "Installing: $1\n"
                sudo apt-get update -y -qq && sudo apt-get install -y "$1" -qq
                echo -e "\n"
        else
                echo -e "${1} is already installed in server.\n"
        fi
}

install nginx # installing nginx

# allow nginx on firewall
sudo ufw allow 'Nginx HTTP'

# assigned ownership of website files to user for easy editing
if [ -d "/var/www" ]; then
        sudo chown -R "$USER":"$USER" /var/www
        sudo chmod -R 755 /var/www
else
        sudo mkdir -p /var/www
        sudo chown -R "$USER":"$USER" /var/www
        sudo chmod -R 755 /var/www
fi

# create directories if not present
for dir in /var/www/{html,error}; do
        if ! [ -d "$dir" ]; then
                mkdir -p "$dir"
        fi
done

# creating new index
echo "Hello World!" > /var/www/html/index.html

# create new error page
echo "Ceci n'est pas une page" > /var/www/html/error_404.html

# default server config file backing up
sudo cp /etc/nginx/sites-enabled/default nginx-sites-enabled_default.backup

server_config=\
"server {
        listen 80 default_server;
        listen [::]:80 default_server;
        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
        server_name _;
	add_header X-Served-By \$hostname;
        location / {
                try_files $uri $uri/ =404;
        }
	if (\$request_filename ~ redirect_me){
		rewrite ^ https://th3-grOOt.tk/ permanent;
	}
	error_page 404 /error_404.html;
	location = /error_404.html {
		internal;
	}
}"

# shellcheck disable=SC2154
echo "$server_config" | sudo dd status=none of=/etc/nginx/sites-enabled/default

if [ "$(pgrep -c nginx)" -le 0 ]; then
	sudo service nginx start
else
	sudo service nginx restart
fi
